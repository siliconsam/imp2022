
!----------------------------------------------------------------------
! global symbols
!----------------------------------------------------------------------
%constinteger max globals = 50
%record %format extern( %integer localid,
                        %string(127) localname,
                        %integer id,
                        %string(127) name)
%own %record(extern)%array globals(1:max globals)
%own %integer global count

!----------------------------------------------------------------------
! new global: DEFEXTCODE, DEFEXTDATA
!----------------------------------------------------------------------
%external %integer %fn new global( %string(127) global name )
    %if (global count < max globals) %start
        global count = global count + 1
        globals( global count )_id = global count
        globals( global count )_name = global name
    %finish %else %start
        debug string( "Max globals =" )
        debug string( itos(max globals,0) )
        debug newline
        debug string( "Too many global names already whilst trying to add " )
        debug string( global name )
        debug newline
    %finish

    %result = global count
%end

!----------------------------------------------------------------------
! get global name: DEFEXTCODE, DEFEXTDATA
!----------------------------------------------------------------------
%external %string(127)%fn get global name( %integer globalid )
    %string(127) name

    length(name) = 0
    name = globals( globalid )_name

    %result = name
%end

!----------------------------------------------------------------------
! get global id: DEFEXTCODE, DEFEXTDATA
!----------------------------------------------------------------------
%external %integer %fn get global id( %integer globalid )
    %integer id

    id = globals( globalid )_id

    %result = id
%end

!----------------------------------------------------------------------
! associate local: DEFEXTCODE, FIXUP, DEFEXTDATA, LABEL
!----------------------------------------------------------------------
%external %routine associate local( %integer globalid,
                                    %integer localid,
                                    %string(127) name )
    globals( globalid )_localid   = localid
    globals( globalid )_localname = name
%end

!----------------------------------------------------------------------
! get associate name: DEFEXTCODE, FIXUP, DEFEXTDATA, LABEL
!----------------------------------------------------------------------
%external %string(127)%fn get associate name( %integer globalid )
    %string(127) name

    length(name) = 0
    name = globals( globalid )_localname

    %result = name
%end

!----------------------------------------------------------------------
! get associate id: DEFEXTCODE, FIXUP, DEFEXTDATA, LABEL
!----------------------------------------------------------------------
%external %integer %fn get associate id( %integer globalid )
    %integer localid

    localid = globals( globalid )_localid

    %result = localid
%end

!----------------------------------------------------------------------
! dump globals
!----------------------------------------------------------------------
%external %routine dump globals
    %integer i

    newline
    print string( "Dumping globals" ); newline

    %for i = 1,1,global count %cycle
        print string( "[" )
        print string( itos(i,5) )
        print string( "/" )
        print string( itos(globals(i)_id,5) )
        print string( "] '" )
        print string( globals(i)_name )
        print string( "'" )
        %if (globals(i)_localid # 0) %start
            print string( "," )
            print string( itos(globals(i)_id,5) )
            print string( ",'" )
            print string( globals(i)_localname )
            print string( "'" )
        %finish
        newline
    %repeat
%end

!----------------------------------------------------------------------
! initialise globals
!----------------------------------------------------------------------
%external %routine initialise globals
    %integer i

    %for i = 1,1,max globals %cycle
        globals(i)_localid = 0
        globals(i)_id = 0
        length(globals(i)_localname) = 0
        length(globals(i)_name) = 0
    %repeat
    global count = 0
%end

!----------------------------------------------------------------------
! referenced externals
!----------------------------------------------------------------------

! externals information
! Formed from REQEXT,REFEXT,ABSEXT
! valid: from (ref > 0)
! ref: from REFEXT, ABSEXT
! name: from REQEXT, ABSEXT
%constinteger max externals = 500
%record %format external( %byte valid,
                        %integer id,
                        %integer ref,
                        %string(127) name)
%own %record(external)%array externals(1:max externals)
%own %integer external count

!----------------------------------------------------------------------
! new external: REQEXT
!----------------------------------------------------------------------
%external %integer %fn new external( %string(127) external name )
    external count = external count + 1
    externals( external count )_id = external count
    externals( external count )_name = external name

    %result = external count
%end

!----------------------------------------------------------------------
! reference external: REFEXT, ABSEXT
!----------------------------------------------------------------------
%external %routine reference external( %integer externalid )
    externals( externalid )_ref = externals( externalid )_ref + 1
    externals( externalid )_valid = 1
%end

!----------------------------------------------------------------------
! get external name: REFEXT, ABSEXT
!----------------------------------------------------------------------
%external %string(127)%fn get external name( %integer externalid )
    %string(127) name

    name = externals( externalid )_name

    %result = name
%end

!----------------------------------------------------------------------
! get external id: REFEXT, ABSEXT
!----------------------------------------------------------------------
%external %integer %fn get external id( %integer externalid )
    %integer id

    id = externals( externalid )_id

    %result = id
%end

!----------------------------------------------------------------------
! get external valid: REFEXT, ABSEXT
!----------------------------------------------------------------------
%external %byte %fn get external valid( %integer externalid )
    %byte valid

    valid = externals( externalid )_valid

    %result = valid
%end

!----------------------------------------------------------------------
! update all externals
!----------------------------------------------------------------------
%external %routine update all externals
    %integer externalid
    %integer i

    externalid = 0
    %for i=1,1,external count %cycle
        %if (externals( i )_ref = 0) %start
            externals( i )_valid = 0
        %finish

        %if (externals(i)_valid = 1) %start
            externalid = externalid + 1
            externals(i)_id = externalid
        %finish

    %repeat
%end

!----------------------------------------------------------------------
! dump externals
!----------------------------------------------------------------------
%external %routine dump externals( %integer show all )
    %integer i

    newline
    %if (show all = 1) %start
        print string( "Dumping ALL externals" ); newline
    %finish %else %start
        print string( "Dumping VALID externals" ); newline
    %finish

    %for i = 1,1,external count %cycle
        %if (show all = 1) %or (externals(i)_valid = 1) %start
            print string( "[" )
            print string( itos(i,5) )
            print string( "/" )
            print string( itos(externals(i)_id,5) )
            print string( "] '" )
            print string( externals(i)_name )
            print string( "'" )
            newline
        %finish
    %repeat
%end

!----------------------------------------------------------------------
! initialise externals
!----------------------------------------------------------------------
%external %routine initialise externals
    %integer i

    %for i = 1,1,max externals %cycle
        externals(i)_valid = 0
        externals(i)_ref = 0
        externals(i)_id = 0
        length(externals(i)_name) = 0
    %repeat
    external count = 0
%end

!----------------------------------------------------------------------
! local symbols/fixup
!----------------------------------------------------------------------
! Local symbols information
! Formed from FIXUP
%constinteger max locals = 500
%record %format local( %integer line id,
                       %string(127) name)
%own %record(local)%array locals(1:max locals)
%own %integer local count

!----------------------------------------------------------------------
! new local
!----------------------------------------------------------------------
%external %integer %fn new local( %integer line id, %string(127) local name )
    %if (local count < max locals) %start
        local count = local count + 1
        locals( local count )_line id = line id
        locals( local count )_name = local name
    %finish %else %start
        debug string( "Max locals =" )
        debug string( itos(max locals,0) )
        debug newline
        debug string( "Too many local names already whilst trying to add " )
        debug string( local name )
        debug newline
    %finish

    %result = local count
%end

!----------------------------------------------------------------------
! get local name: FIXUP
!----------------------------------------------------------------------
%external %string(127)%fn get local name( %integer localid )
    %string(127) name

    name = locals( localid )_name

    %result = name
%end

!----------------------------------------------------------------------
! dump locals
!----------------------------------------------------------------------
%external %routine dump locals
    %integer i

    newline
    print string( "Dumping Local Symbols" )
    newline

    %for i = 1,1,local count %cycle
        print string( "[" )
        print string( itos(i,5) )
        print string( "] " )

        print string( itos(locals(i)_lineid,5) )
        print symbol( ',' )

        print symbol( '"' )
        print string( locals(i)_name )
        print symbol( '"' )
        newline
    %repeat
%end

!----------------------------------------------------------------------
! initialise locals
!----------------------------------------------------------------------
%external %routine initialise locals
    %integer i

    %for i = 1,1,max locals %cycle
        locals(i)_line id = 0
        locals(i)_name = ""
    %repeat
    local count = 0
%end

%endoffile

