#!/bin/sh
# Simple IMP compiler shell wrapper

# Compiler source and binary folders 
SOURCEDIR=~/winhome/tools/imp2022
RELEASEDIR=/usr/local

PROGNAME=`basename $0`
SHOW_LIST=false
SHOW_CODE=false
DO_LINK=true
TEST_MODE=false
TIDY_MODE=true
SHARE_MODE=false
HEAP_MODE=false

# Parse the arguments...
MORETODO=true
while ${MORETODO} ; do
   case X"$1" in
   X-c)
	DO_LINK=false
	;;
   X-Fc)
	SHOW_CODE=true
	;;
   X-Fs)
	SHOW_LIST=true
	;;
   X-Fh)
	HEAP_MODE=true
	;;
   X-e)
	TEST_MODE=true
	;;
   X-s)
	SHARE_MODE=true
	;;
   X-Fi)
	TIDY_MODE=false
	;;
   *)
	MORETODO=false
	;;
   esac
   ${MORETODO} && shift
done

if [ $# -ne 1 ]; then
	echo "${PROGNAME}: No source file?" 1>&2
	exit 1
fi

# try to be ambivalent about which extension is used
SRCNAME=`basename $1 .imp`
SRCNAME=`basename $SRCNAME .i`
# and now check that there was one (and it's been removed)
if [ X"$SRCNAME" = X"$1" ]; then
	echo "${PROGNAME}: Source must be .imp or .i" 1>&2
	exit 1
fi

if ${TEST_MODE}; then
  INC_DIR=${SOURCEDIR}/include
  P1_PROG=${SOURCEDIR}/compiler/pass1
  P2_PROG=${SOURCEDIR}/compiler/pass2
  P3_PROG=${SOURCEDIR}/pass3/pass3elf
  LD_SCRIPT=${SOURCEDIR}/pass3/ld.i77.script
  LIB_DIR=${SOURCEDIR}/lib
else
  INC_DIR=${RELEASEDIR}/include
  P1_PROG=${RELEASEDIR}/bin/pass1
  P2_PROG=${RELEASEDIR}/bin/pass2
  P3_PROG=${RELEASEDIR}/bin/pass3elf
  LD_SCRIPT=${RELEASEDIR}/bin/ld.i77.script
  LIB_DIR=${RELEASEDIR}/lib
fi


if ${HEAP_MODE}; then
  HEAP_OPT="-lc"
else
  HEAP_OPT=""
fi


if ${SHARE_MODE}; then
  LINK_OPT="-libimp77 -lm ${HEAP_OPT} -T ${LD_SCRIPT}"
else
  LINK_OPT="${LIB_DIR}/libimp77.a -lm ${HEAP_OPT} -T ${LD_SCRIPT}"
fi

if ${SHOW_LIST}; then
	LISTFILE=${SRCNAME}.lst
else
    LISTFILE=/dev/null
fi

if ${SHOW_CODE}; then
	CODEFILE=${SRCNAME}.cod
else
    CODEFILE=/dev/null
fi

${P1_PROG} $1,${INC_DIR}/stdperm.imp=${SRCNAME}.icd,${LISTFILE}
if [ $? -ne 0 ] ; then
	exit 1
fi

${P2_PROG} ${SRCNAME}.icd,$1=${SRCNAME}.ibj,${CODEFILE}
if ${TIDY_MODE}; then
	rm ${SRCNAME}.icd
fi

${P3_PROG} ${SRCNAME}.ibj ${SRCNAME}.o
if ${TIDY_MODE}; then
	rm ${SRCNAME}.ibj
fi

if ${DO_LINK}; then
    # Linker
    gcc -m32 -no-pie -o ${SRCNAME} ${SRCNAME}.o ${LINK_OPT}
	if ${TIDY_MODE}; then
		rm ${SRCNAME}.o
	fi
fi
